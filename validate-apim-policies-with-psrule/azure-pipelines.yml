trigger: none

# See https://microsoft.github.io/PSRule/v2/creating-your-pipeline/ for more information on running PSRule in a pipeline

jobs:
# This job should fail because not all files in the src folder conform to the APIM policy rules
- job: run_psrule_on_src
  displayName: 'Run PSRule on src folder'
  condition: false
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  steps:
  - checkout: self
  - task: ps-rule-assert@2
    displayName: 'Analyse src folder with PSRule'
    inputs:
      path: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/'
      inputType: 'inputPath'
      inputPath: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/src/'
      source: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/.ps-rule/'
      option: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/.ps-rule/ps-rule.yaml'
      outputFormat: 'None'

      
# This job should succeed because all files in the src/good folder conform to the APIM policy rules
- job: run_psrule_on_src_good
  displayName: 'Run PSRule on src/good folder'
  condition: false
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  steps:
  - checkout: self
  - task: ps-rule-assert@2
    displayName: 'Analyse src/good folder with PSRule'
    inputs:
      path: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/src/good/'
      inputType: 'inputPath'
      inputPath: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/src/good/'
      source: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/.ps-rule/'
      option: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/.ps-rule/ps-rule.yaml'
      outputFormat: 'None'


# This job executes the Pester tests using https://github.com/pester/AzureDevOpsExtension
- job: run_pester_tests
  displayName: 'Run Pester Tests'
  pool:
    vmImage: 'ubuntu-latest'
  workspace:
    clean: all
  steps:
  - checkout: self

  - pwsh: 'Install-Module -Name PSRule -Repository PSGallery -Force -Scope CurrentUser'
    displayName: 'Install PSRule module'

  - task: PowerShell@2
    displayName: "Execute Pester Tests"
    inputs:
      filePath: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/tests/Invoke-PesterTests.ps1'
      arguments: '-Path "$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/tests" -TestResultsPath "$(System.DefaultWorkingDirectory)/Test-Pester.XML"'
      workingDirectory: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/tests'
      pwsh: true
    continueOnError: true # continue on error to publish test results
  
  # I tried using the Pester task, but the scenarios fail where a rule should not be applied like 'APIM.Policy.InboundBasePolicy.Should not apply to global'.
  # Locally, the Invoke-PSRule commandlet returns null, but when using this task it returns a RuleRecord object.
  - task: Pester@10
    displayName: "Execute Pester Tests"
    enabled: false
    inputs:
      scriptFolder: '$(Build.SourcesDirectory)/validate-apim-policies-with-psrule/tests'
      resultsFile: '$(System.DefaultWorkingDirectory)/Test-Pester.XML'
      usePSCore: true
      PesterVersion: 'OtherVersion'
      preferredPesterVersion: '5.4.1'
    continueOnError: true # continue on error to publish test results

  - task: PublishTestResults@2
    displayName: 'Publish Pester Test Results'
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: '**/Test-Pester.XML'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: true
      failTaskOnFailedTests: true
