trigger: none

variables:
  azureServiceConnection: 'Visual Studio Enterprise 1'
  resourceGroupName: 'rg-my-apim-client-cert-sample'
  keyVaultName: 'kv-my-apim-client-certs'
  clientCertificateName: 'my-sample-client-certificate'
  clientCertificatePassword: 'MyPassword' # Should be a secret variable
  apiManagementServiceName: 'apim-my-client-certs-sample'
  
steps:
- task: DownloadSecureFile@1
  name: clientCertificate
  displayName: 'Download Client Certificate from Secure files library'
  inputs:
    secureFile: 'my-sample-client-certificate.pfx'
        
- task: AzurePowerShell@5
  displayName: "Import Client Certificate into Key Vault"
  inputs:
    azureSubscription: '${{ variables.azureServiceConnection }}'
    ScriptType: 'InlineScript'
    Inline: |
      $securePassword = ConvertTo-SecureString -String $env:SECURE_CERTIFICATE_PASSWORD -Force -AsPlainText
      ./deploy-apim-client-certificate-in-key-vault-with-azure-pipeline/extended-sample/import-certificate.ps1 `
          -KeyVaultName "$(keyVaultName)" `
          -CertificateName "$(clientCertificateName)" `
          -CertificatePassword $securePassword `
          -CertificateFilePath "$(clientCertificate.secureFilePath)"
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'
    pwsh: true
  # The recommended approach to pass a secret on the command line is through an environment variable.
  # See https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables
  env:
    SECURE_CERTIFICATE_PASSWORD: '$(clientCertificatePassword)'

- task: AzureCLI@2
  displayName: 'Deploy Bicep Template'
  inputs:
    azureSubscription: '${{ variables.azureServiceConnection }}'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az deployment group create `
        --name 'apim-client-cert-sample-deployment' `
        --resource-group '$(resourceGroupName)' `
        --template-file './deploy-apim-client-certificate-in-key-vault-with-azure-pipeline/sample/main.bicep' `
        --parameters keyVaultName='$(keyVaultName)' `
                     clientCertificateName='$(clientCertificateName)' `
                     apiManagementServiceName='$(apiManagementServiceName)' `
        --verbose